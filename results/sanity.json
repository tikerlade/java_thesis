{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java annotator",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Incompatible types. Found: 'null', required: 'java.util.List<java.lang.String>'",
  "detailsInfo": "Allows viewing the problems reported by the Java annotator: compilation problems, unresolved by IDEA references, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/java/ru/spbstu/icst/problems/Clause.java",
      "language": "JAVA",
      "line": 86,
      "offset": 8,
      "length": 4,
      "code": {
        "startLine": 84,
        "length": 4,
        "offset": 80,
        "surroundingCode": "    public String toString() {\n        // Represent literals as Strings\n        List<String> literalsAsString = literals.stream().map(Literal::toString).toList();\n\n        // Join string representations of literals with | sign"
      }
    }
  ],
  "attributes": {
    "module": "java_thesis.main",
    "inspectionName": "JavaAnnotator"
  },
  "hash": "-1118289347038853949"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java annotator",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Cannot resolve method 'toList' in 'Stream'",
  "detailsInfo": "Allows viewing the problems reported by the Java annotator: compilation problems, unresolved by IDEA references, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/java/ru/spbstu/icst/problems/Clause.java",
      "language": "JAVA",
      "line": 86,
      "offset": 81,
      "length": 6,
      "code": {
        "startLine": 84,
        "length": 6,
        "offset": 153,
        "surroundingCode": "    public String toString() {\n        // Represent literals as Strings\n        List<String> literalsAsString = literals.stream().map(Literal::toString).toList();\n\n        // Join string representations of literals with | sign"
      }
    }
  ],
  "attributes": {
    "module": "java_thesis.main",
    "inspectionName": "JavaAnnotator"
  },
  "hash": "1637851242734590024"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java annotator",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Cannot infer arguments (unable to resolve constructor)",
  "detailsInfo": "Allows viewing the problems reported by the Java annotator: compilation problems, unresolved by IDEA references, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/java/ru/spbstu/icst/problems/CnfFormula.java",
      "language": "JAVA",
      "line": 139,
      "offset": 50,
      "length": 1,
      "code": {
        "startLine": 137,
        "length": 1,
        "offset": 120,
        "surroundingCode": "\n        // Go through literals and try to assign true value for them\n        HashSet<String> trueLiterals = new HashSet<>(tempLiterals.stream().map(Literal::toString).toList());\n        for (Literal literal : allLiterals) {\n            if (trueLiterals.contains(literal.toString())) {"
      }
    }
  ],
  "attributes": {
    "module": "java_thesis.main",
    "inspectionName": "JavaAnnotator"
  },
  "hash": "-413208108105257733"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java annotator",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Cannot resolve constructor 'HashSet(?)'",
  "detailsInfo": "Allows viewing the problems reported by the Java annotator: compilation problems, unresolved by IDEA references, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/java/ru/spbstu/icst/problems/CnfFormula.java",
      "language": "JAVA",
      "line": 139,
      "offset": 52,
      "length": 1,
      "code": {
        "startLine": 137,
        "length": 1,
        "offset": 122,
        "surroundingCode": "\n        // Go through literals and try to assign true value for them\n        HashSet<String> trueLiterals = new HashSet<>(tempLiterals.stream().map(Literal::toString).toList());\n        for (Literal literal : allLiterals) {\n            if (trueLiterals.contains(literal.toString())) {"
      }
    }
  ],
  "attributes": {
    "module": "java_thesis.main",
    "inspectionName": "JavaAnnotator"
  },
  "hash": "1488246319791305632"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java annotator",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Cannot resolve method 'toList' in 'Stream'",
  "detailsInfo": "Allows viewing the problems reported by the Java annotator: compilation problems, unresolved by IDEA references, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/java/ru/spbstu/icst/problems/CnfFormula.java",
      "language": "JAVA",
      "line": 139,
      "offset": 98,
      "length": 6,
      "code": {
        "startLine": 137,
        "length": 6,
        "offset": 168,
        "surroundingCode": "\n        // Go through literals and try to assign true value for them\n        HashSet<String> trueLiterals = new HashSet<>(tempLiterals.stream().map(Literal::toString).toList());\n        for (Literal literal : allLiterals) {\n            if (trueLiterals.contains(literal.toString())) {"
      }
    }
  ],
  "attributes": {
    "module": "java_thesis.main",
    "inspectionName": "JavaAnnotator"
  },
  "hash": "1760170342514018775"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java annotator",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Incompatible types. Found: 'null', required: 'java.util.List<java.lang.String>'",
  "detailsInfo": "Allows viewing the problems reported by the Java annotator: compilation problems, unresolved by IDEA references, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/java/ru/spbstu/icst/problems/CnfFormula.java",
      "language": "JAVA",
      "line": 280,
      "offset": 8,
      "length": 4,
      "code": {
        "startLine": 278,
        "length": 4,
        "offset": 79,
        "surroundingCode": "    public String toString() {\n        // Represent clauses as Strings\n        List<String> clausesAsString = clauses.stream().map(Clause::toString).toList();\n\n        // Join string representations of clauses with & sign"
      }
    }
  ],
  "attributes": {
    "module": "java_thesis.main",
    "inspectionName": "JavaAnnotator"
  },
  "hash": "1916832254613371177"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java annotator",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Enhanced 'switch' blocks are not supported at language level '11'",
  "detailsInfo": "Allows viewing the problems reported by the Java annotator: compilation problems, unresolved by IDEA references, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/java/ru/spbstu/icst/reductions/Reduction.java",
      "language": "JAVA",
      "line": 70,
      "offset": 12,
      "length": 4,
      "code": {
        "startLine": 68,
        "length": 4,
        "offset": 109,
        "surroundingCode": "    public void start(ProgramMode programMode) throws Exception {\n        switch (programMode) {\n            case FORWARD_ONLY -> {\n                this.forwardOnly();\n                System.out.println(this.problemB);"
      }
    }
  ],
  "attributes": {
    "module": "java_thesis.main",
    "inspectionName": "JavaAnnotator"
  },
  "hash": "-5049435063123357174"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java annotator",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Cannot infer arguments (unable to resolve constructor)",
  "detailsInfo": "Allows viewing the problems reported by the Java annotator: compilation problems, unresolved by IDEA references, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/java/ru/spbstu/icst/reductions/CnfTo3CnfReduction.java",
      "language": "JAVA",
      "line": 175,
      "offset": 63,
      "length": 1,
      "code": {
        "startLine": 173,
        "length": 1,
        "offset": 123,
        "surroundingCode": "\n                // Put final 3 values into clauses of 3CNF\n                ArrayList<Literal> lastLiterals = new ArrayList<>(clauseStack.stream().toList());\n                Collections.reverse(lastLiterals);\n                Clause lastClause = new Clause(lastLiterals);"
      }
    }
  ],
  "attributes": {
    "module": "java_thesis.main",
    "inspectionName": "JavaAnnotator"
  },
  "hash": "-7252996760681006989"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java annotator",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Cannot resolve constructor 'ArrayList(?)'",
  "detailsInfo": "Allows viewing the problems reported by the Java annotator: compilation problems, unresolved by IDEA references, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/java/ru/spbstu/icst/reductions/CnfTo3CnfReduction.java",
      "language": "JAVA",
      "line": 175,
      "offset": 65,
      "length": 1,
      "code": {
        "startLine": 173,
        "length": 1,
        "offset": 125,
        "surroundingCode": "\n                // Put final 3 values into clauses of 3CNF\n                ArrayList<Literal> lastLiterals = new ArrayList<>(clauseStack.stream().toList());\n                Collections.reverse(lastLiterals);\n                Clause lastClause = new Clause(lastLiterals);"
      }
    }
  ],
  "attributes": {
    "module": "java_thesis.main",
    "inspectionName": "JavaAnnotator"
  },
  "hash": "-165324693332297816"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java annotator",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Cannot resolve method 'toList' in 'Stream'",
  "detailsInfo": "Allows viewing the problems reported by the Java annotator: compilation problems, unresolved by IDEA references, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/java/ru/spbstu/icst/reductions/CnfTo3CnfReduction.java",
      "language": "JAVA",
      "line": 175,
      "offset": 87,
      "length": 6,
      "code": {
        "startLine": 173,
        "length": 6,
        "offset": 147,
        "surroundingCode": "\n                // Put final 3 values into clauses of 3CNF\n                ArrayList<Literal> lastLiterals = new ArrayList<>(clauseStack.stream().toList());\n                Collections.reverse(lastLiterals);\n                Clause lastClause = new Clause(lastLiterals);"
      }
    }
  ],
  "attributes": {
    "module": "java_thesis.main",
    "inspectionName": "JavaAnnotator"
  },
  "hash": "-96660326365129206"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java annotator",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Enhanced 'switch' blocks are not supported at language level '11'",
  "detailsInfo": "Allows viewing the problems reported by the Java annotator: compilation problems, unresolved by IDEA references, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/java/ru/spbstu/icst/controllers/Controller.java",
      "language": "JAVA",
      "line": 70,
      "offset": 12,
      "length": 4,
      "code": {
        "startLine": 68,
        "length": 4,
        "offset": 132,
        "surroundingCode": "    void startReduction(ActionEvent event) throws Exception {\n        switch (this.getReduction().getReductionMode()) {\n            case FORWARD_ONLY -> {\n                this.forwardOnly();\n            }"
      }
    }
  ],
  "attributes": {
    "module": "java_thesis.main",
    "inspectionName": "JavaAnnotator"
  },
  "hash": "524781534695543910"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java annotator",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Enhanced 'switch' blocks are not supported at language level '11'",
  "detailsInfo": "Allows viewing the problems reported by the Java annotator: compilation problems, unresolved by IDEA references, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/java/ru/spbstu/icst/controllers/CnfScreenController.java",
      "language": "JAVA",
      "line": 48,
      "offset": 12,
      "length": 4,
      "code": {
        "startLine": 46,
        "length": 4,
        "offset": 66,
        "surroundingCode": "\n        switch (this.reduction.getReductionMode()) {\n            case FORWARD_ONLY -> makeForwardStep();\n            case FORWARD_SOLVE -> makeForwardSolveStep();\n            case FORWARD_SOLVE_BACKWARD -> makeForwardSolveBackwardStep();"
      }
    }
  ],
  "attributes": {
    "module": "java_thesis.main",
    "inspectionName": "JavaAnnotator"
  },
  "hash": "-6015448124489032040"
}]}